# Task definition to create AWS VPC for Pickachu application
- name: Create VPC
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ region }}"
    cidr_block: "{{ cidr_block }}"
    # Enable DNS support of EC2 instances
    dns_support: yes
    # Enable DNS Hostnames
    dns_hostnames: yes
    # Default tenancy, for most VPCs
    tenancy: default
    state: present
  register: pik_vpc_net_result
- name: Create Internet Gateway 
  ec2_vpc_igw:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    vpc_id: "{{ pik_vpc_net_result.vpc.id }}"
    region: "{{ region }}"
    state: present
    tags:
      Name: "{{ igw_name }}"
  register: pik_igw_result
- name: Create Subnet 1 
  ec2_vpc_subnet:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    vpc_id: "{{ pik_vpc_net_result.vpc.id }}"
    region: "{{ region }}"
    az: "{{ region }}a"      # az is the availability zone
    state: present
    cidr: "{{ subnet_1_cidr_block }}"
    # enable public ip
    map_public: yes
    resource_tags:
      Name: "pik-subnet-1"
  register: pik_subnet_1_result
- name: Create Subnet 2
  ec2_vpc_subnet:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    vpc_id: "{{ pik_vpc_net_result.vpc.id }}"
    region: "{{ region }}"
    az: "{{ region }}b"      # az is the availability zone
    state: present
    cidr: "{{ subnet_2_cidr_block }}"
    # enable public ip
    map_public: yes
    resource_tags:
      Name: "pik-subnet-2"
  register: pik_subnet_2_result
- name: Create Subnet 3
  ec2_vpc_subnet:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    vpc_id: "{{ pik_vpc_net_result.vpc.id }}"
    region: "{{ region }}"
    az: "{{ region }}c"      # az is the availability zone
    state: present
    cidr: "{{ subnet_3_cidr_block }}"
    # enable public ip
    map_public: yes
    resource_tags:
      Name: "pik-subnet-3"
  register: pik_subnet_3_result
- name: Create VPC Public Subnet Route Table
  ec2_vpc_route_table:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    vpc_id: "{{ pik_vpc_net_result.vpc.id }}"
    region: "{{ region }}"
    state: present
    tags:
      Name: "{{ route_table_name }}"
    subnets: [ 
      "{{ pik_subnet_1_result.subnet.id }}",
      "{{ pik_subnet_2_result.subnet.id }}",
      "{{ pik_subnet_3_result.subnet.id }}",
       ]
    # create routes
    routes:
      - dest: "{{ destination_cidr_block }}"
        gateway_id: "{{ pik_igw_result.gateway_id }}"
  register: pik_public_route_table